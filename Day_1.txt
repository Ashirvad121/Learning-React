Day 1: Introduction to React
What is React?
React is a popular and powerful JavaScript library for building user interfaces. It was developed by Facebook and
is now maintained by a community of developers. React allows you to create interactive, dynamic, and reusable UI 
components that can be combined to build complex applications efficiently.

Setting up the Development Environment:
Before we start coding with React, you need to set up your development environment. Make sure you have Node.js and
npm (Node Package Manager) installed on your computer. You can download them from the official Node.js website 
(https://nodejs.org/).

Once you have Node.js and npm installed, open your terminal or command prompt and verify their installation by running
the following commands:

bash
Copy code
node -v
npm -v
These commands should display the installed versions of Node.js and npm, respectively.

Creating Your First React App
To create a new React application, we'll use the Create React App tool, which sets up a new project with all the 
necessary configurations.

Open your terminal or command prompt.

Run the following command to create a new React app:

npx create-react-app my-react-app
Replace "my-react-app" with the desired name for your project. This command will create a new folder with the 
project structure and install all the dependencies.

Change your current directory to the newly created project folder:
cd my-react-app
Now, start the development server by running the following command:
npm start
This will launch your React app in development mode, and you should see it running in your default web browser at http://localhost:3000.

Understanding the Project Structure
When you open your project folder, you will see a structure like this:

my-react-app/
  ├── node_modules/
  ├── public/
  ├── src/
  ├── package.json
  ├── package-lock.json
  ├── .gitignore
  └── README.md
The node_modules/ folder contains all the dependencies installed for your project.

The public/ folder contains the static assets and the main index.html file, which is the entry point to your React application.

The src/ folder is where you will write your React code. It contains the main index.js file, which renders your app to the DOM.

The package.json file is a configuration file that lists the project's dependencies and scripts.

The package-lock.json file is automatically generated and helps ensure that all team members use the same versions of dependencies.

The .gitignore file specifies which files and directories should not be tracked by version control (Git).

The README.md file contains documentation and information about the project.


Q. what is npx create-react-app my-react-app?
npx: npx is a package runner tool that comes with npm (Node Package Manager). It is used to execute packages installed in your project
without the need to install them globally on your system. In this case, we are using npx to run the create-react-app package.

create-react-app: This is the name of the package that we want to execute using npx. create-react-app is a command-line utility provided
by Facebook to bootstrap new React applications easily.

my-react-app: This is the name of the project you want to create. You can replace my-react-app with any name you prefer for your React application.
This name will be used as the folder name for your project.

When you run the npx create-react-app my-react-app command, here's what happens:

npx looks for the create-react-app package in your project's local node_modules folder. If it finds it, it will execute the package; otherwise, 
it will download it from the npm registry before running it.

The create-react-app utility is executed with the provided project name (my-react-app in this case).

The utility sets up a new React application with all the necessary configurations and dependencies. It creates a new folder with the specified 
project name (my-react-app) and sets up the project structure, including the initial React code, build configurations, and development server.

